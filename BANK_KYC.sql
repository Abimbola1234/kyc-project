create table BANK_AGENT(
ID INTEGER,
First_Name VARCHAR(50) NOT NULL,
Last_Name VARCHAR(50) NOT NULL,
Gender VARCHAR(20) NOT NULL,
Phone_Number VARCHAR(15) NOT NULL,
Email VARCHAR(100) NOT NULL,
DOB DATE NOT NULL,
Staff_id VARCHAR(10) NOT NULL,
Address VARCHAR(100) NOT NULL,
PRIMARY KEY (ID),
UNIQUE (Staff_Id)
);

create table CUSTOMER_ACCOUNT(
ID INTEGER,
Account_Number VARCHAR(20) NOT NULL,
first_Name VARCHAR(50) NOT NULL,
Last_Name VARCHAR(50) NOT NULL,
Gender VARCHAR(20) NOT NULL,
DOB DATE NOT NULL,
Relationship VARCHAR(20) NOT NULL,
Email VARCHAR(100) NOT NULL,
Phone_Number VARCHAR(15) NOT NULL,
Address VARCHAR(100) NOT NULL,
State VARCHAR(50) NOT NULL,
Country VARCHAR(100) NOT NULL,
Account_Status VARCHAR(50) NOT NULL,
KYC_Status VARCHAR(20) NOT NULL,
KYC_Verified_Date DATE NOT NULL,
Approval_Officer_id VARCHAR(10) NOT NULL, 
PRIMARY KEY (ID),
UNIQUE (Account_Number),
FOREIGN KEY(Approval_Officer_Id) REFERENCES BANK_AGENT(Staff_Id)
);

create table CUSTOMER_ADDRESS(
ID INTEGER,
Customer_id INTEGER,
Address_Type VARCHAR(50) NOT NULL,
Street_Number INTEGER NOT NULL,
Street_Name VARCHAR(50) NOT NULL,
Area VARCHAR(50) NOT NULL,
LGA VARCHAR(100) NOT NULL,
State VARCHAR(100) NOT NULL,
Country VARCHAR(100) NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY(Customer_Id) REFERENCES CUSTOMER_ACCOUNT(ID)
);

create table COLLATERAL_TYPE(
ID INTEGER,
Code VARCHAR(10) NOT NULL,
Name VARCHAR(100) NOT NULL,
Description VARCHAR(200) NOT NULL,
Minimum_Value DECIMAL(30,2) NOT NULL,
PRIMARY KEY (ID),
UNIQUE (Code, Name)
);

create table NEW_ACCOUNT_KYC(
ID INTEGER,
Customer_id INTEGER NOT NULL,
Bank_Agent_id INTEGER NOT NULL,
Street_Number VARCHAR(10) NOT NULL,
Street_Name VARCHAR(50) NOT NULL,
Area VARCHAR(50) NOT NULL,
LGA VARCHAR(100) NOT NULL,
State VARCHAR(100) NOT NULL,
Country VARCHAR(100) NOT NULL,
Date_Checked Date NOT NULL,
Verified_Flag NUMBER(1) DEFAULT 0 NOT NULL,
PRIMARY KEY (ID),
UNIQUE (Customer_Id,Bank_Agent_Id,Date_Checked),
FOREIGN KEY(Bank_Agent_id) REFERENCES BANK_AGENT(ID)
);

create table LOAN_TYPES(
ID INTEGER,
Code VARCHAR(10) NOT NULL,
Name VARCHAR(50) NOT NULL,
Default_Tenure VARCHAR(6) NOT NULL,
Interest_Rate DECIMAL(30,6) NOT NULL,
Minimum_Amount DECIMAL(30,2) NOT NULL,
Minimum_Guarantors INTEGER NOT NULL,
Minimum_Age_Limit INTEGER NOT NULL,
Maximum_Age_Limit INTEGER NOT NULL,
PRIMARY KEY(ID),
UNIQUE(Code,Name)
);

create table LOAN_OFFICERS(
ID INTEGER,
Staff_Id INTEGER NOT NULL,
First_Name VARCHAR(50) NOT NULL,
Last_Name VARCHAR(50) NOT NULL,
Gender VARCHAR(10) NOT NULL,
DOB DATE NOT NULL,
Phone_Number VARCHAR(15) NOT NULL,
Email VARCHAR(100) NOT NULL,
Address VARCHAR(100) NOT NULL,
PRIMARY KEY(ID),
UNIQUE(Staff_Id)
);


create table LOAN_APPLICATION(
ID INTEGER,
Loan_Id INTEGER NOT NULL,
Account_Number VARCHAR(20) NOT NULL,
Loan_Type_Id INTEGER NOT NULL,
Loan_Officer_Id INTEGER NOT NULL,
Collateral_Type_Id INTEGER NOT NULL,
Collateral_Address VARCHAR(100) NOT NULL,
Collateral_Value DECIMAL(30,5) NOT NULL,
Appication_Date DATE NOT NULL,
Principal DECIMAL(30,5) NOT NULL,
Tenure DECIMAL(5,2) NOT NULL,
Period VARCHAR(10) NOT NULL,
First_Payment_Date DATE,
Loan_Status VARCHAR(50) NOT NULL,
KYC_Status VARCHAR(50) NOT NULL,
Approved_Date DATE,
Approval_Staff_Id VARCHAR(10) NOT NULL,
Disbursement_Status VARCHAR(50) NOT NULL,
Disbursement_Date DATE NULL,
PRIMARY KEY(ID),
UNIQUE(Loan_Id),
FOREIGN KEY(Account_Number) REFERENCES CUSTOMER_ACCOUNT(Account_Number),
FOREIGN KEY(Loan_Type_Id) REFERENCES LOAN_TYPES(ID),
FOREIGN KEY(Loan_Officer_Id) REFERENCES LOAN_OFFICERS(ID),
FOREIGN KEY(Collateral_Type_Id) REFERENCES COLLATERAL_TYPE(ID),
FOREIGN KEY(Approval_Staff_Id) REFERENCES BANK_AGENT(Staff_Id)
);

create table LOAN_GUARANTORS(
id INTEGER,
Loan_Id INTEGER NOT NULL,
First_Name VARCHAR(50) NOT NULL,
Last_Name VARCHAR(50) NOT NULL,
Gender VARCHAR(10) NOT NULL,
DOB DATE NULL,
Relationship VARCHAR(10) NOT NULL,
Email VARCHAR(100) NOT NULL,
Phone_Number VARCHAR(15) NOT NULL,
Address VARCHAR(100) NOT NULL,
State VARCHAR(50) NOT NULL,
Country VARCHAR(50) NOT NULL,
PRIMARY KEY(ID),
FOREIGN KEY(Loan_Id) REFERENCES LOAN_APPLICATION(Loan_Id)
);


create table LOAN_APPLICATION_KYC(
id INTEGER,
Loan_Application_Id INTEGER NOT NULL,
Bank_Agent_Id INTEGER NOT NULL,
Collateral_Address VARCHAR(100) NOT NULL,
Area VARCHAR(50) NOT NULL,
LGA VARCHAR(50) NOT NULL,
State VARCHAR(50) NOT NULL,
Country VARCHAR(50) NOT NULL,
Date_Checked DATE NOT NULL,
Verified_Flag NUMBER(1) DEFAULT 0 NOT NULL,
PRIMARY KEY(ID),
UNIQUE(Collateral_Address,Bank_Agent_Id,Loan_Application_Id, Date_Checked),
FOREIGN KEY(Loan_Application_Id) REFERENCES LOAN_APPLICATION(ID),
FOREIGN KEY(Bank_Agent_Id) REFERENCES BANK_AGENT(ID)
);
